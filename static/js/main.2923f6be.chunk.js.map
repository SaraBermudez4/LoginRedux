{"version":3,"sources":["hooks/useForm.js","components/types/types.js","components/firebase/firebase-config.js","components/actions/uiError.js","components/reducers/helpers/fileUpload.js","components/reducers/helpers/loadNote.js","components/actions/notesAction.js","components/actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PublicRouter.js","routers/PrivateRouter.js","routers/AppRouter.js","components/reducers/uiReducer.js","components/reducers/notesReducer.js","store/store.js","components/reducers/authReducer.js","JournalApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","newStateForm","handleInputChange","target","name","value","types","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","setError","err","type","payLoad","startLoading","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","console","log","secure_url","loadNote","uid","collection","get","noteStore","notes","forEach","noteDt","push","id","data","activeNotes","setNote","startLoadingNote","dispatch","startSaveNote","getState","url","noteToFirestore","doc","update","Swal","fire","title","text","deleteNote","startLoginEmailPassword","email","password","dispath","signInWithEmailAndPassword","then","user","login","displayName","catch","e","startLogout","signOut","logout","LoginScreen","useDispatch","formValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","src","alt","onClick","signInWithPopup","to","RegisterScreen","msjError","useSelector","state","ui","password2","formValid","trim","length","validator","isEmail","error","Sweet","icon","createUserWithEmailAndPassword","updateProfile","alert","startRegisterWithEmailPassword","AuthRouter","exact","path","component","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","map","note","key","Sidebar","newNote","Date","getTime","add","docRef","NotesAppBar","active","hoy","now","toDateString","display","files","noteActive","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploadFile","document","querySelector","click","delete","NoteScreen","activeID","useRef","useEffect","current","NothingSelected","JournalScreen","PublicRouter","isAuthenticated","Component","rest","props","PrivateRouter","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","loading","reducers","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2923f6be.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newStateForm = initialState) => {\r\n        setValues(newStateForm);\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}","export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start Loading',\r\n    uiFinishLoading: '[UI] Finish Loading',\r\n\r\n    notesAddNew: '[NOTES] New notes',\r\n    notesActive: '[NOTES] Set active notes',\r\n    noteLoad: '[NOTES] Load notes',\r\n    notesUpdate: '[NOTES] Update notes',\r\n    notesFileUrl: '[NOTES] Image url',\r\n    notesLogoutClean: '[NOTES] Logout',\r\n    notesDelete: '[NOTES] Delete notes'\r\n}","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyClWP14w7MrTQD42aHUTIY25vaRNoMpVN8\",\r\n    authDomain: \"redux-d9447.firebaseapp.com\",\r\n    projectId: \"redux-d9447\",\r\n    storageBucket: \"redux-d9447.appspot.com\",\r\n    messagingSenderId: \"676828266080\",\r\n    appId: \"1:676828266080:web:0e40c7e583767ea7410d05\",\r\n    measurementId: \"G-EPLJPNDHYC\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore()\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider()\r\n\r\nexport { db, googleAuthProvider, firebase }","import { types } from '../types/types'\r\n\r\nexport const setError = (err) => {\r\n    return {\r\n        type: types.uiSetError,\r\n        payLoad: err\r\n    }\r\n}\r\n\r\nexport const removeError = () => {\r\n    return {\r\n        type: types.uiRemoveError,\r\n    }\r\n}\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})","export const fileUpload = async (file) => {\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/sarabermudez4/image/upload'\r\n\r\n    const formData = new FormData()\r\n\r\n    formData.append('upload_preset', 'react-app-notes')\r\n    formData.append('file', file)\r\n\r\n    try {\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        if(resp.ok){\r\n            const cloudResp = await resp.json()\r\n            console.log(cloudResp);\r\n            return cloudResp.secure_url\r\n        }else{\r\n            throw await resp.json\r\n        }\r\n\r\n    } catch (e) {\r\n        throw e\r\n    }\r\n}\r\n\r\n\r\n","import { db } from \"../../firebase/firebase-config\"\r\n\r\nexport const loadNote = async (uid) => {\r\n\r\n    const noteStore = await db.collection(`${uid}/jurnal/notes`).get()\r\n    const notes = []\r\n\r\n    noteStore.forEach(noteDt => {\r\n        notes.push({\r\n            id: noteDt.id,\r\n            ...noteDt.data()\r\n        })\r\n        //noteDt.data()\r\n        // console.log(noteDt.notes);\r\n\r\n    });\r\n\r\n    // console.log(\"FireStore\", notes);\r\n\r\n    return notes\r\n}\r\n","import { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from \"../reducers/helpers/fileUpload\";\r\nimport { loadNote } from \"../reducers/helpers/loadNote\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2'\r\n\r\nexport const notesAdd = (notes) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        // const {title, body} = notes\r\n\r\n        const uid = getState().auth.uid\r\n        // console.log(uid);\r\n\r\n        const newNote = {\r\n            title: \"\",\r\n            body: \"\",\r\n            date: new Date().getTime()\r\n        }\r\n        const docRef = await db.collection(`${uid}/jurnal/notes`).add(newNote)\r\n        dispatch(activeNotes(uid, newNote))\r\n        dispatch(startLoadingNote(uid))\r\n        console.log(docRef);\r\n    }\r\n}\r\n\r\nexport const activeNotes = (uid, notes) => {\r\n    return {\r\n        type: types.notesActive,\r\n        payLoad: {\r\n            uid,\r\n            ...notes\r\n        }\r\n    }\r\n}\r\n\r\nexport const setNote = (notes) => {\r\n    return {\r\n        type: types.noteLoad,\r\n        payLoad: notes\r\n    }\r\n}\r\n\r\nexport const startLoadingNote = (uid) => {\r\n    return async (dispatch) => {\r\n        const notes = await loadNote(uid)\r\n        dispatch(setNote(notes))\r\n    }\r\n}\r\n\r\nexport const startSaveNote = (notes) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth\r\n\r\n        if (!notes.url) {\r\n            delete notes.url\r\n        }\r\n\r\n        const noteToFirestore = { ...notes }\r\n        delete noteToFirestore.uid\r\n\r\n        await db.doc(`${uid}/jurnal/notes/${notes.uid}`).update(noteToFirestore)\r\n        // console.log(noteToFirestore);\r\n        dispatch(startLoadingNote(uid))\r\n        // dispatch(refreshNote(notes.uid, notes))\r\n        Swal.fire({\r\n            title: 'Exito',\r\n            text: `Nota ${notes.title} actualizada correctamente`\r\n        })\r\n    }\r\n}\r\n\r\nexport const refreshNote = (uid, notes) => ({\r\n    type: types.notesUpdate,\r\n    payLoad: {\r\n        uid,\r\n        notes: {\r\n            uid,\r\n            ...notes\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport const startUploadFile = (noteActive, file) => {\r\n    return async (dispatch) => {\r\n        // const {active} = getState().notes\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: `Por favor espere, se está cargando la imagen ${file.name}`,\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading()\r\n            }\r\n        })\r\n        const fileUrl = await fileUpload(file)\r\n        noteActive.url = fileUrl\r\n        // console.log(noteActive);\r\n        // console.log(file);\r\n        dispatch(startSaveNote(noteActive))\r\n        Swal.close()\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payLoad: id\r\n})\r\n\r\nexport const startDeleteNote = (id) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth\r\n        await db.doc(`${uid}/jurnal/notes/${id}`).delete()\r\n        dispatch(deleteNote(id))\r\n        dispatch(startLoadingNote(uid))\r\n        Swal.fire({\r\n            title: 'Exito',\r\n            text: `Nota eliminada correctamente`\r\n        })\r\n    }\r\n}\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutClean,\r\n})\r\n","import { types } from '../types/types'\r\n\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config'\r\nimport { finishLoading, startLoading } from './uiError'\r\nimport { noteLogout } from '../actions/notesAction'\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispath) => {\r\n        return firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({ user }) => {\r\n                dispath(startLoading)\r\n                dispath(login(user.uid, user.displayName))\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                dispath(finishLoading())\r\n            })\r\n    }\r\n}\r\nexport const startRegisterWithEmailPassword = (email, password, name) => {\r\n    return (dispath) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(async ({ user }) => {\r\n                await user.updateProfile({ displayName: name })\r\n                dispath(login(user.uid, user.displayName))\r\n            })\r\n            .catch(e => {\r\n                alert(\"Hay un error mi so\" + e)\r\n            })\r\n    }\r\n}\r\n\r\nexport const startGoogleLoginPassword = () => {\r\n    return (dispath) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(async ({ user }) => {\r\n                await dispath(login(user.uid, user.displayName))\r\n                // console.log(user);\r\n            }).catch(e => {\r\n                console.log(e);\r\n            })\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => {\r\n    return {\r\n        type: types.login,\r\n        payLoad: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return (dispath) => {\r\n        firebase.auth().signOut()\r\n        dispath(logout())\r\n        dispath(noteLogout())\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout,\r\n})","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { useDispatch } from 'react-redux'\r\nimport { startLoginEmailPassword, startGoogleLoginPassword } from '../actions/auth'\r\n// import { setError, removeError } from '../actions/uiError';\r\n// import Sweet from 'sweetalert2'\r\n// import validator from 'validator';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    // const loading = useSelector(state => state.ui);\r\n    // const { msjError } = useSelector(state => state.ui)\r\n\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const { email, password } = formValues;\r\n\r\n    // const error = (error) => {\r\n    //     return (\r\n    //         Sweet.fire({\r\n    //             icon: 'error',\r\n    //             title: 'Oops...',\r\n    //             text: error,\r\n    //         })\r\n    //     )\r\n    // }\r\n\r\n    // const formValid = () => {\r\n    //     if (!validator.isEmail(email)) {\r\n    //         dispatch(setError('Email requerido'))\r\n    //         return false\r\n    //     }\r\n    //     else if (password < 5) {\r\n    //         dispatch(setError('La contraseña es incorecta'))\r\n    //         return false\r\n    //     }\r\n\r\n    //     dispatch(removeError(''))\r\n    //     return true\r\n    // }\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        // error(msjError)\r\n        // if (formValid()) {\r\n        //     reset()\r\n            dispatch(startLoginEmailPassword(email, password))\r\n        // }\r\n    }\r\n\r\n    const handleGoogle = () => {\r\n        dispatch(startGoogleLoginPassword())\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form onSubmit={handleLogin}>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    password={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    // disabled={loading}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n\r\n                    <div\r\n                        className=\"google-btn\"\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\"\r\n                            onClick={handleGoogle}>\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link\r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport validator from 'validator';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startRegisterWithEmailPassword } from '../actions/auth';\r\nimport { setError, removeError } from '../actions/uiError';\r\nimport Sweet from 'sweetalert2'\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { msjError } = useSelector(state => state.ui)\r\n\r\n    const [formValues, handleInputChange, reset] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n\r\n    const { name, email, password, password2 } = formValues\r\n\r\n    const error = (error) => {\r\n        return (\r\n            Sweet.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: error,\r\n            })\r\n        )\r\n    }\r\n\r\n    const formValid = () => {\r\n        if (name.trim().length === 0) {\r\n            dispatch(setError('Nombre requerido'))\r\n            // error('Nombre requerido')\r\n            return false\r\n        }\r\n        else if (!validator.isEmail(email)) {\r\n            dispatch(setError('Email requerido'))\r\n            // error('Email requerido')\r\n            return false\r\n        }\r\n        else if (password !== password2 || password < 5) {\r\n            dispatch(setError('La contraseña es incorecta'))\r\n            // error('La contraseña es incorecta')\r\n            return false\r\n        }\r\n\r\n        dispatch(removeError(''))\r\n        return true\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n        error(msjError)\r\n        if (formValid()) {\r\n            reset()\r\n            dispatch(startRegisterWithEmailPassword(email, password, name))\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n            {/* {\r\n                    msjError &&\r\n                    (\r\n                        Sweet.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops...',\r\n                            text: msjError,\r\n            \r\n                        })\r\n                    )\r\n                } */}\r\n            <form onSubmit={handleRegister}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                    \r\n                >\r\n                    Register\r\n                </button>\r\n\r\n\r\n\r\n                <Link\r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route \r\n                        exact\r\n                        path=\"/auth/login\"\r\n                        component={ LoginScreen }\r\n                    />\r\n\r\n                    <Route \r\n                        exact\r\n                        path=\"/auth/register\"\r\n                        component={ RegisterScreen }\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n\r\n                </Switch>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux'\r\nimport { activeNotes } from '../actions/notesAction'\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const noteDate = moment(date)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch(activeNotes(id,\r\n            {\r\n                date, title, body, url\r\n            }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div className=\"journal__entry pointer\" onClick={handleEntryClick}>\r\n\r\n            <div\r\n                className=\"journal__entry-picture\"\r\n                style={{\r\n                    backgroundSize: 'cover',\r\n                    backgroundImage: `url(${url})`\r\n                }}\r\n            ></div>\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const {notes} = useSelector(state => state.notes)\r\n\r\n    // console.log(notes);\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            \r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry key={ note.id } \r\n                    {...note}/>\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../actions/auth'\r\nimport { notesAdd } from '../actions/notesAction'\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {name} = useSelector(state => state.auth)\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span>{name}</span>\r\n                </h3>\r\n\r\n                <button className=\"btn\" onClick={() => {\r\n                    dispatch(startLogout())\r\n                }}>\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"journal__new-entry\" onClick={() => {\r\n                dispatch(notesAdd())\r\n            }}>\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startDeleteNote, startSaveNote, startUploadFile } from '../actions/notesAction'\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { active } = useSelector(state => state.notes)\r\n    // console.log(active.uid);\r\n    const handleSave = () => {\r\n        dispatch(startSaveNote(active))\r\n    }\r\n    const handlePicture = () => {\r\n        document.querySelector('#fileId').click()\r\n        console.log(\"Click\");\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0]\r\n        console.log(file);\r\n        dispatch(startUploadFile(active, file))\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleteNote(active.uid))\r\n    }\r\n\r\n    var f = new Date();\r\n    const hoy = new Date(Date.now())\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>{hoy.toDateString()}</span>\r\n            <div>\r\n                <input type=\"file\" id=\"fileId\" name=\"file\" style={{ display: \"none\" }} onChange={handleFileChange}/>\r\n                <button className=\"btn\" onClick={handlePicture}>\r\n                    Picture\r\n                </button>\r\n\r\n                <button className=\"btn\" onClick={handleSave}>\r\n                    Save\r\n                </button>\r\n                <button className=\"btn\" onClick={handleDelete}>\r\n                    Delete\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { activeNotes } from '../actions/notesAction'\r\nimport { NotesAppBar } from './NotesAppBar'\r\nexport const NoteScreen = () => {\r\n\r\n    const { active: notes } = useSelector(state => state.notes)\r\n\r\n    const [values, handleInputChange, reset] = useForm(notes)\r\n\r\n    const { title = \"\", body = \"\", uid = \"\" } = values\r\n    const activeID = useRef(notes.uid)\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (notes.uid !== activeID.current) {\r\n            reset()\r\n        }\r\n        activeID.current = notes.uid\r\n    }, [notes, reset])\r\n\r\n    useEffect(() => {\r\n        dispatch(activeNotes(uid, { ...values }))\r\n    }, [dispatch, values])\r\n\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    value={title}\r\n                    name=\"title\"\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    value={body}\r\n                    name=\"body\"\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n\r\n                <div className=\"notes__image\">\r\n                    {\r\n                        notes.url\r\n                        ?\r\n                        <img\r\n                        src={notes.url}\r\n                        alt=\"imagen\"\r\n                        />\r\n                        :\r\n                        <div></div>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                pr create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Sidebar } from './Sidebar';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { NothingSelected } from './NothingSelected';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nexport const JournalScreen = () => {\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className=\"journal__main-content\">\r\n\r\n            <Sidebar />\r\n            <main>\r\n                {\r\n                    (active)\r\n                        ?\r\n                        <NoteScreen />\r\n                        :\r\n                        <NothingSelected />\r\n                }\r\n            </main>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRouter = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRouter.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRouter = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/auth/login\" /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\nPrivateRouter.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from 'react-router-dom';\r\n\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { useDispatch } from 'react-redux';\r\nimport { firebase } from '../components/firebase/firebase-config'\r\nimport { login } from '../components/actions/auth';\r\nimport { PublicRouter } from './PublicRouter';\r\nimport { PrivateRouter } from './PrivateRouter';\r\n// import { loadNote } from '../components/reducers/helpers/loadNote';\r\nimport { startLoadingNote } from '../components/actions/notesAction';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const [checking, setChecking] = useState(true)\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(async (user) => {\r\n            if (user?.uid) {\r\n                dispatch(login(user.uid, user.displayName))\r\n                setIsLoggedIn(true)\r\n                \r\n                dispatch(startLoadingNote(user.uid))\r\n            }\r\n            else{\r\n                console.log(\"Usuario no registrado\");\r\n                setIsLoggedIn(false)\r\n            }\r\n            setChecking(false)\r\n        })\r\n    }, [dispatch,setChecking])\r\n\r\n    if(checking){\r\n        return (\r\n            <h1>Cargando info</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRouter\r\n                        path=\"/auth\"\r\n                        component={AuthRouter}\r\n                        isAuthenticated={isLoggedIn}\r\n                    />\r\n\r\n                    <PrivateRouter\r\n                        exact\r\n                        path=\"/\"\r\n                        component={JournalScreen}\r\n                        isAuthenticated={isLoggedIn}\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msjError: null\r\n}\r\n\r\nexport const registro = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msjError: action.payLoad\r\n            }\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msjError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n        case types.logout:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: \"\"\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payLoad\r\n                }\r\n            }\r\n        case types.noteLoad:\r\n            return {\r\n                ...state,\r\n                notes: [\r\n                    ...action.payLoad\r\n                ]\r\n            }\r\n        case types.notesUpdate:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    notes => notes.uid === action.payLoad.uid\r\n                        ?\r\n                        action.payLoad.notes\r\n                        :\r\n                        notes\r\n\r\n                )\r\n            }\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.uid !== action.payLoad)\r\n            }\r\n\r\n        case types.notesLogoutClean:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport { authReducer } from '../components/reducers/authReducer'\r\nimport thunk from 'redux-thunk';\r\nimport { registro } from '../components/reducers/uiReducer'\r\nimport { notesReducer } from '../components/reducers/notesReducer'\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: registro,\r\n    notes: notesReducer\r\n})\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import { types } from '../types/types'\r\n\r\n// const initialState = {\r\n//     uid: 123,\r\n//     name: 'Jenny',\r\n//     dir: {\r\n//         b:12\r\n//     }\r\n// }\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payLoad.uid,\r\n                name: action.payLoad.displayName\r\n            }\r\n        case types.logout:\r\n            return {\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store'\r\nimport { Provider } from 'react-redux'\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { JournalApp } from './JournalApp';\r\nimport './styles/styles.scss'\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <JournalApp />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}